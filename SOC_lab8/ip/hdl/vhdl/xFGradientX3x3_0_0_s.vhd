-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFGradientX3x3_0_0_s is
port (
    ap_ready : OUT STD_LOGIC;
    t0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    t2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    m0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    m2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    b0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    b2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of xFGradientX3x3_0_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal M00_fu_70_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal M01_fu_82_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_fu_94_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_fu_98_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_102_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_2_fu_112_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_2_fu_116_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_2_fu_120_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln69_fu_90_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln68_fu_78_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_pix_7_fu_130_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln70_fu_108_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln74_fu_136_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_pix_8_fu_140_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln71_fu_126_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_pix_fu_146_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_164_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_156_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln82_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln82_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln82_fu_186_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_x_V_fu_152_p1 : STD_LOGIC_VECTOR (7 downto 0);


begin



    M00_fu_70_p3 <= (m0_V & ap_const_lv1_0);
    M01_fu_82_p3 <= (m2_V & ap_const_lv1_0);
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        select_ln82_fu_186_p3 when (or_ln82_fu_194_p2(0) = '1') else 
        g_x_V_fu_152_p1;
    g_x_V_fu_152_p1 <= out_pix_fu_146_p2(8 - 1 downto 0);
    icmp_ln86_fu_174_p2 <= "1" when (signed(tmp_2_fu_164_p4) > signed(ap_const_lv3_0)) else "0";
    lhs_V_2_fu_112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t0_V),9));
    lhs_V_fu_94_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t2_V),9));
    or_ln82_fu_194_p2 <= (tmp_fu_156_p3 or icmp_ln86_fu_174_p2);
    out_pix_7_fu_130_p2 <= std_logic_vector(unsigned(zext_ln69_fu_90_p1) - unsigned(zext_ln68_fu_78_p1));
    out_pix_8_fu_140_p2 <= std_logic_vector(unsigned(zext_ln70_fu_108_p1) + unsigned(sext_ln74_fu_136_p1));
    out_pix_fu_146_p2 <= std_logic_vector(unsigned(out_pix_8_fu_140_p2) - unsigned(zext_ln71_fu_126_p1));
    ret_V_2_fu_120_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_112_p1) + unsigned(rhs_V_2_fu_116_p1));
    ret_V_fu_102_p2 <= std_logic_vector(unsigned(lhs_V_fu_94_p1) + unsigned(rhs_V_fu_98_p1));
    rhs_V_2_fu_116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b0_V),9));
    rhs_V_fu_98_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b2_V),9));
    select_ln82_fu_186_p3 <= 
        ap_const_lv8_FF when (xor_ln82_fu_180_p2(0) = '1') else 
        ap_const_lv8_0;
        sext_ln74_fu_136_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_pix_7_fu_130_p2),11));

    tmp_2_fu_164_p4 <= out_pix_fu_146_p2(10 downto 8);
    tmp_fu_156_p3 <= out_pix_fu_146_p2(10 downto 10);
    xor_ln82_fu_180_p2 <= (tmp_fu_156_p3 xor ap_const_lv1_1);
    zext_ln68_fu_78_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M00_fu_70_p3),10));
    zext_ln69_fu_90_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M01_fu_82_p3),10));
    zext_ln70_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_102_p2),11));
    zext_ln71_fu_126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_2_fu_120_p2),11));
end behav;
