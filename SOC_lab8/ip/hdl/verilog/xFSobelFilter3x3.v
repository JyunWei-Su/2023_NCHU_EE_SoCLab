// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xFSobelFilter3x3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_mat_data_V_address0,
        p_src_mat_data_V_ce0,
        p_src_mat_data_V_q0,
        p_dst_matx_data_V_address0,
        p_dst_matx_data_V_ce0,
        p_dst_matx_data_V_we0,
        p_dst_matx_data_V_d0,
        p_dst_maty_data_V_address0,
        p_dst_maty_data_V_ce0,
        p_dst_maty_data_V_we0,
        p_dst_maty_data_V_d0,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_state4 = 7'd4;
parameter    ap_ST_fsm_state5 = 7'd8;
parameter    ap_ST_fsm_pp1_stage0 = 7'd16;
parameter    ap_ST_fsm_state12 = 7'd32;
parameter    ap_ST_fsm_state13 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] p_src_mat_data_V_address0;
output   p_src_mat_data_V_ce0;
input  [7:0] p_src_mat_data_V_q0;
output  [11:0] p_dst_matx_data_V_address0;
output   p_dst_matx_data_V_ce0;
output   p_dst_matx_data_V_we0;
output  [7:0] p_dst_matx_data_V_d0;
output  [11:0] p_dst_maty_data_V_address0;
output   p_dst_maty_data_V_ce0;
output   p_dst_maty_data_V_we0;
output  [7:0] p_dst_maty_data_V_d0;
input  [15:0] img_height;
input  [15:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] p_src_mat_data_V_address0;
reg p_src_mat_data_V_ce0;
reg[11:0] p_dst_matx_data_V_address0;
reg p_dst_matx_data_V_ce0;
reg p_dst_matx_data_V_we0;
reg[7:0] p_dst_matx_data_V_d0;
reg[11:0] p_dst_maty_data_V_address0;
reg p_dst_maty_data_V_ce0;
reg p_dst_maty_data_V_we0;
reg[7:0] p_dst_maty_data_V_d0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] index_assign_reg_293;
reg   [12:0] t_V_reg_304;
reg   [12:0] t_V_3_reg_351;
reg   [7:0] src_buf3_V_0_0_reg_363;
reg   [7:0] src_buf2_0_V_reg_375;
reg   [7:0] src_buf2_0_V_reg_375_pp1_iter4_reg;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
wire    ap_block_state10_pp1_stage0_iter4;
wire    ap_block_state11_pp1_stage0_iter5;
wire    ap_block_pp1_stage0_11001;
reg   [7:0] src_buf2_V_0_0_reg_387;
reg   [7:0] src_buf3_0_V_reg_400;
reg   [7:0] src_buf3_0_V_reg_400_pp1_iter4_reg;
reg   [7:0] src_buf1_0_V_reg_413;
reg   [7:0] src_buf1_0_V_reg_413_pp1_iter4_reg;
reg   [7:0] src_buf1_V_0_0_reg_425;
reg  signed [31:0] index_assign_1_reg_438;
reg  signed [31:0] index_assign_1_reg_438_pp1_iter4_reg;
reg   [31:0] write_index_2_reg_449;
wire   [31:0] read_index_2_fu_518_p1;
reg   [31:0] read_index_2_reg_853;
wire   [0:0] icmp_ln316_fu_522_p2;
reg   [0:0] icmp_ln316_reg_858;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] read_index_fu_527_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln544_fu_533_p1;
reg   [63:0] zext_ln544_reg_867;
wire   [12:0] col_V_fu_543_p2;
wire   [16:0] add_ln326_fu_552_p2;
reg   [16:0] add_ln326_reg_907;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln887_fu_566_p2;
wire    ap_CS_fsm_state5;
wire   [1:0] select_ln879_fu_648_p3;
reg   [1:0] select_ln879_reg_916;
wire   [1:0] select_ln879_2_fu_664_p3;
reg   [1:0] select_ln879_2_reg_921;
wire   [1:0] select_ln879_4_fu_680_p3;
reg   [1:0] select_ln879_4_reg_926;
wire   [0:0] icmp_ln887_1_fu_688_p2;
reg   [0:0] icmp_ln887_1_reg_931;
wire   [1:0] trunc_ln321_fu_693_p1;
reg   [1:0] trunc_ln321_reg_935;
wire   [0:0] icmp_ln887_2_fu_716_p2;
reg   [0:0] icmp_ln887_2_reg_939;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] icmp_ln887_2_reg_939_pp1_iter1_reg;
reg   [0:0] icmp_ln887_2_reg_939_pp1_iter2_reg;
reg   [0:0] icmp_ln887_2_reg_939_pp1_iter3_reg;
reg   [0:0] icmp_ln887_2_reg_939_pp1_iter4_reg;
wire   [12:0] col_V_1_fu_721_p2;
reg   [12:0] col_V_1_reg_943;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln544_1_fu_746_p1;
reg   [63:0] zext_ln544_1_reg_953;
wire   [0:0] icmp_ln879_3_fu_756_p2;
reg   [0:0] icmp_ln879_3_reg_960;
reg   [0:0] icmp_ln879_3_reg_960_pp1_iter2_reg;
reg   [0:0] icmp_ln879_3_reg_960_pp1_iter3_reg;
reg   [0:0] icmp_ln879_3_reg_960_pp1_iter4_reg;
wire   [7:0] buf0_V_fu_762_p5;
reg   [7:0] buf0_V_reg_979;
reg    ap_enable_reg_pp1_iter3;
wire   [7:0] buf1_V_fu_773_p5;
reg   [7:0] buf1_V_reg_985;
wire   [7:0] buf2_V_fu_784_p5;
reg   [7:0] buf2_V_reg_991;
reg   [7:0] GradientValuesX_0_V_reg_997;
reg   [7:0] GradientValuesY_0_V_reg_1002;
wire   [7:0] GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_478_ap_return;
reg   [7:0] GradientValuesX_0_V_1_reg_1007;
wire    ap_CS_fsm_state12;
wire   [7:0] GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_494_ap_return;
reg   [7:0] GradientValuesY_0_V_1_reg_1012;
wire   [12:0] select_ln401_fu_821_p3;
reg   [12:0] select_ln401_reg_1017;
wire   [12:0] row_V_fu_829_p2;
reg   [12:0] row_V_reg_1022;
wire   [31:0] grp_fu_510_p2;
wire    ap_CS_fsm_state13;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg    ap_condition_pp1_exit_iter3_state9;
reg    ap_enable_reg_pp1_iter5;
wire   [5:0] buf_0_V_address0;
reg    buf_0_V_ce0;
wire   [7:0] buf_0_V_q0;
reg   [5:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
wire   [5:0] buf_1_V_address0;
reg    buf_1_V_ce0;
wire   [7:0] buf_1_V_q0;
reg   [5:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [7:0] buf_1_V_d1;
wire   [5:0] buf_2_V_address0;
reg    buf_2_V_ce0;
wire   [7:0] buf_2_V_q0;
reg   [5:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [7:0] buf_2_V_d1;
wire    call_ret_xFSobel3x3_fu_461_ap_ready;
wire   [7:0] call_ret_xFSobel3x3_fu_461_ap_return_0;
wire   [7:0] call_ret_xFSobel3x3_fu_461_ap_return_1;
wire    GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_478_ap_ready;
wire    GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_494_ap_ready;
reg   [31:0] write_index_0_reg_315;
reg   [12:0] t_V_1_reg_327;
reg   [12:0] t_V_2_reg_339;
reg   [12:0] ap_phi_mux_t_V_3_phi_fu_355_p4;
wire    ap_block_pp1_stage0;
reg   [7:0] ap_phi_mux_src_buf3_V_0_0_phi_fu_367_p4;
reg   [7:0] ap_phi_mux_src_buf2_V_0_0_phi_fu_391_p4;
reg   [7:0] ap_phi_mux_src_buf1_V_0_0_phi_fu_429_p4;
reg  signed [31:0] ap_phi_mux_index_assign_1_phi_fu_441_p4;
wire   [31:0] ap_phi_reg_pp1_iter3_write_index_2_reg_449;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln621_fu_538_p1;
wire   [63:0] zext_ln621_1_fu_736_p1;
wire   [5:0] buf_0_V_addr_1_gep_fu_207_p3;
wire   [5:0] buf_1_V_addr_1_gep_fu_213_p3;
wire   [5:0] buf_2_V_addr_gep_fu_219_p3;
wire  signed [63:0] sext_ln650_1_fu_803_p1;
wire  signed [63:0] sext_ln650_fu_835_p1;
reg   [1:0] p_01400_0_fu_92;
reg   [1:0] p_01396_0_fu_96;
reg   [1:0] p_01392_0_fu_100;
reg   [31:0] read_index_1_fu_104;
wire   [31:0] read_index_3_fu_730_p2;
reg  signed [31:0] grp_fu_510_p0;
wire   [16:0] zext_ln326_fu_549_p1;
wire   [16:0] zext_ln887_1_fu_562_p1;
wire   [0:0] icmp_ln879_2_fu_596_p2;
wire   [0:0] icmp_ln879_fu_584_p2;
wire   [0:0] icmp_ln879_1_fu_590_p2;
wire   [0:0] xor_ln879_fu_626_p2;
wire   [0:0] and_ln879_fu_632_p2;
wire   [0:0] or_ln879_fu_642_p2;
wire   [1:0] zext_ln879_fu_638_p1;
wire   [1:0] select_ln337_fu_602_p3;
wire   [1:0] select_ln879_1_fu_656_p3;
wire   [1:0] select_ln337_1_fu_610_p3;
wire   [1:0] select_ln879_3_fu_672_p3;
wire   [1:0] select_ln337_2_fu_618_p3;
wire   [15:0] zext_ln887_fu_580_p1;
wire   [15:0] zext_ln887_2_fu_712_p1;
wire   [12:0] row_ind_V_fu_809_p2;
wire   [0:0] icmp_ln879_4_fu_815_p2;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_706;
reg    ap_condition_710;
reg    ap_condition_342;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
end

xFSobelFilter3x3_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

xFSobelFilter3x3_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

xFSobelFilter3x3_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

xFSobel3x3 call_ret_xFSobel3x3_fu_461(
    .ap_ready(call_ret_xFSobel3x3_fu_461_ap_ready),
    .src_buf1_0_V_read(ap_phi_mux_src_buf1_V_0_0_phi_fu_429_p4),
    .src_buf1_1_V_read(src_buf1_0_V_reg_413),
    .src_buf1_2_V_read(buf0_V_reg_979),
    .src_buf2_0_V_read(ap_phi_mux_src_buf2_V_0_0_phi_fu_391_p4),
    .src_buf2_2_V_read(buf1_V_reg_985),
    .src_buf3_0_V_read(ap_phi_mux_src_buf3_V_0_0_phi_fu_367_p4),
    .src_buf3_1_V_read(src_buf3_0_V_reg_400),
    .src_buf3_2_V_read(buf2_V_reg_991),
    .ap_return_0(call_ret_xFSobel3x3_fu_461_ap_return_0),
    .ap_return_1(call_ret_xFSobel3x3_fu_461_ap_return_1)
);

xFGradientX3x3_0_0_s GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_478(
    .ap_ready(GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_478_ap_ready),
    .t0_V(src_buf1_V_0_0_reg_425),
    .t2_V(8'd0),
    .m0_V(src_buf2_V_0_0_reg_387),
    .m2_V(8'd0),
    .b0_V(src_buf3_V_0_0_reg_363),
    .b2_V(8'd0),
    .ap_return(GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_478_ap_return)
);

xFGradientY3x3_0_0_s GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_494(
    .ap_ready(GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_494_ap_ready),
    .t0_V(src_buf1_V_0_0_reg_425),
    .t1_V(src_buf1_0_V_reg_413),
    .t2_V(8'd0),
    .b0_V(src_buf3_V_0_0_reg_363),
    .b1_V(src_buf3_0_V_reg_400),
    .b2_V(8'd0),
    .ap_return(GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_494_ap_return)
);

Sobel_Stream_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Sobel_Stream_mux_eOg_U31(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(select_ln879_reg_916),
    .dout(buf0_V_fu_762_p5)
);

Sobel_Stream_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Sobel_Stream_mux_eOg_U32(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(select_ln879_2_reg_921),
    .dout(buf1_V_fu_773_p5)
);

Sobel_Stream_mux_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
Sobel_Stream_mux_eOg_U33(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(select_ln879_4_reg_926),
    .dout(buf2_V_fu_784_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_fu_716_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter3_state9)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter3_reg == 1'd1))) begin
        index_assign_1_reg_438 <= write_index_2_reg_449;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
        index_assign_1_reg_438 <= write_index_0_reg_315;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln316_fu_522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        index_assign_reg_293 <= read_index_fu_527_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        index_assign_reg_293 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_fu_716_p2 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1))) begin
        read_index_1_fu_104 <= read_index_3_fu_730_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        read_index_1_fu_104 <= read_index_2_reg_853;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter3_reg == 1'd1))) begin
        src_buf1_0_V_reg_413 <= buf0_V_reg_979;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
        src_buf1_0_V_reg_413 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter4_reg == 1'd1))) begin
        src_buf1_V_0_0_reg_425 <= src_buf1_0_V_reg_413_pp1_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
        src_buf1_V_0_0_reg_425 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter3_reg == 1'd1))) begin
        src_buf2_0_V_reg_375 <= buf1_V_reg_985;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
        src_buf2_0_V_reg_375 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter4_reg == 1'd1))) begin
        src_buf2_V_0_0_reg_387 <= src_buf2_0_V_reg_375_pp1_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
        src_buf2_V_0_0_reg_387 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter3_reg == 1'd1))) begin
        src_buf3_0_V_reg_400 <= buf2_V_reg_991;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
        src_buf3_0_V_reg_400 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter4_reg == 1'd1))) begin
        src_buf3_V_0_0_reg_363 <= src_buf3_0_V_reg_400_pp1_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
        src_buf3_V_0_0_reg_363 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        t_V_1_reg_327 <= select_ln401_reg_1017;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_1_reg_327 <= 13'd2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        t_V_2_reg_339 <= row_V_reg_1022;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_2_reg_339 <= 13'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_reg_939 == 1'd1))) begin
        t_V_3_reg_351 <= col_V_1_reg_943;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
        t_V_3_reg_351 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln316_fu_522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_reg_304 <= col_V_fu_543_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_304 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        write_index_0_reg_315 <= grp_fu_510_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        write_index_0_reg_315 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        if (((icmp_ln879_3_reg_960_pp1_iter2_reg == 1'd1) & (icmp_ln887_2_reg_939_pp1_iter2_reg == 1'd1))) begin
            write_index_2_reg_449 <= ap_phi_mux_index_assign_1_phi_fu_441_p4;
        end else if (((icmp_ln887_2_reg_939_pp1_iter2_reg == 1'd1) & (icmp_ln879_3_reg_960_pp1_iter2_reg == 1'd0))) begin
            write_index_2_reg_449 <= grp_fu_510_p2;
        end else if ((1'b1 == 1'b1)) begin
            write_index_2_reg_449 <= ap_phi_reg_pp1_iter3_write_index_2_reg_449;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        GradientValuesX_0_V_1_reg_1007 <= GradientValuesX_0_V_1_xFGradientX3x3_0_0_s_fu_478_ap_return;
        GradientValuesY_0_V_1_reg_1012 <= GradientValuesY_0_V_1_xFGradientY3x3_0_0_s_fu_494_ap_return;
        row_V_reg_1022 <= row_V_fu_829_p2;
        select_ln401_reg_1017 <= select_ln401_fu_821_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln887_2_reg_939_pp1_iter3_reg == 1'd1))) begin
        GradientValuesX_0_V_reg_997 <= call_ret_xFSobel3x3_fu_461_ap_return_0;
        GradientValuesY_0_V_reg_1002 <= call_ret_xFSobel3x3_fu_461_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln326_reg_907 <= add_ln326_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter2_reg == 1'd1))) begin
        buf0_V_reg_979 <= buf0_V_fu_762_p5;
        buf1_V_reg_985 <= buf1_V_fu_773_p5;
        buf2_V_reg_991 <= buf2_V_fu_784_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_1_reg_943 <= col_V_1_fu_721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln316_reg_858 <= icmp_ln316_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_reg_939 == 1'd1))) begin
        icmp_ln879_3_reg_960 <= icmp_ln879_3_fu_756_p2;
        zext_ln544_1_reg_953[12 : 0] <= zext_ln544_1_fu_746_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln879_3_reg_960_pp1_iter2_reg <= icmp_ln879_3_reg_960;
        icmp_ln879_3_reg_960_pp1_iter3_reg <= icmp_ln879_3_reg_960_pp1_iter2_reg;
        icmp_ln879_3_reg_960_pp1_iter4_reg <= icmp_ln879_3_reg_960_pp1_iter3_reg;
        icmp_ln887_2_reg_939_pp1_iter2_reg <= icmp_ln887_2_reg_939_pp1_iter1_reg;
        icmp_ln887_2_reg_939_pp1_iter3_reg <= icmp_ln887_2_reg_939_pp1_iter2_reg;
        icmp_ln887_2_reg_939_pp1_iter4_reg <= icmp_ln887_2_reg_939_pp1_iter3_reg;
        index_assign_1_reg_438_pp1_iter4_reg <= index_assign_1_reg_438;
        src_buf1_0_V_reg_413_pp1_iter4_reg <= src_buf1_0_V_reg_413;
        src_buf2_0_V_reg_375_pp1_iter4_reg <= src_buf2_0_V_reg_375;
        src_buf3_0_V_reg_400_pp1_iter4_reg <= src_buf3_0_V_reg_400;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd1))) begin
        icmp_ln887_1_reg_931 <= icmp_ln887_1_fu_688_p2;
        p_01392_0_fu_100 <= select_ln879_fu_648_p3;
        p_01396_0_fu_96 <= select_ln879_2_fu_664_p3;
        p_01400_0_fu_92 <= select_ln879_4_fu_680_p3;
        select_ln879_2_reg_921 <= select_ln879_2_fu_664_p3;
        select_ln879_4_reg_926 <= select_ln879_4_fu_680_p3;
        select_ln879_reg_916 <= select_ln879_fu_648_p3;
        trunc_ln321_reg_935 <= trunc_ln321_fu_693_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln887_2_reg_939 <= icmp_ln887_2_fu_716_p2;
        icmp_ln887_2_reg_939_pp1_iter1_reg <= icmp_ln887_2_reg_939;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        read_index_2_reg_853[15 : 0] <= read_index_2_fu_518_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln316_fu_522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln544_reg_867[12 : 0] <= zext_ln544_fu_533_p1[12 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln316_fu_522_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_condition_pp1_exit_iter3_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter3_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter3_reg == 1'd1))) begin
        ap_phi_mux_index_assign_1_phi_fu_441_p4 = write_index_2_reg_449;
    end else begin
        ap_phi_mux_index_assign_1_phi_fu_441_p4 = index_assign_1_reg_438;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter4_reg == 1'd1))) begin
        ap_phi_mux_src_buf1_V_0_0_phi_fu_429_p4 = src_buf1_0_V_reg_413_pp1_iter4_reg;
    end else begin
        ap_phi_mux_src_buf1_V_0_0_phi_fu_429_p4 = src_buf1_V_0_0_reg_425;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter4_reg == 1'd1))) begin
        ap_phi_mux_src_buf2_V_0_0_phi_fu_391_p4 = src_buf2_0_V_reg_375_pp1_iter4_reg;
    end else begin
        ap_phi_mux_src_buf2_V_0_0_phi_fu_391_p4 = src_buf2_V_0_0_reg_387;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter4_reg == 1'd1))) begin
        ap_phi_mux_src_buf3_V_0_0_phi_fu_367_p4 = src_buf3_0_V_reg_400_pp1_iter4_reg;
    end else begin
        ap_phi_mux_src_buf3_V_0_0_phi_fu_367_p4 = src_buf3_V_0_0_reg_363;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_reg_939 == 1'd1))) begin
        ap_phi_mux_t_V_3_phi_fu_355_p4 = col_V_1_reg_943;
    end else begin
        ap_phi_mux_t_V_3_phi_fu_355_p4 = t_V_3_reg_351;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_935 == 2'd0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1))) begin
        buf_0_V_address1 = buf_0_V_addr_1_gep_fu_207_p3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_926 == 2'd0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0))) begin
        buf_0_V_address1 = zext_ln544_1_fu_746_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_0_V_address1 = zext_ln544_fu_533_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_926 == 2'd0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_935 == 2'd0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_935 == 2'd0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1))) begin
        buf_0_V_d1 = p_src_mat_data_V_q0;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_926 == 2'd0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0)))) begin
        buf_0_V_d1 = 8'd0;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln316_fu_522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_926 == 2'd0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_935 == 2'd0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_935 == 2'd1) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1))) begin
        buf_1_V_address1 = buf_1_V_addr_1_gep_fu_213_p3;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_926 == 2'd1) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0))) begin
        buf_1_V_address1 = zext_ln544_1_fu_746_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        buf_1_V_address1 = zext_ln544_reg_867;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_926 == 2'd1) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_935 == 2'd1) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_926 == 2'd1) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0))) begin
        buf_1_V_d1 = 8'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_935 == 2'd1) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1)))) begin
        buf_1_V_d1 = p_src_mat_data_V_q0;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln316_reg_858 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (select_ln879_4_reg_926 == 2'd1) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln321_reg_935 == 2'd1) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_342)) begin
        if ((1'b1 == ap_condition_710)) begin
            buf_2_V_address1 = buf_2_V_addr_gep_fu_219_p3;
        end else if ((1'b1 == ap_condition_706)) begin
            buf_2_V_address1 = zext_ln544_1_fu_746_p1;
        end else begin
            buf_2_V_address1 = 'bx;
        end
    end else begin
        buf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(select_ln879_4_reg_926 == 2'd1) & ~(select_ln879_4_reg_926 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0)) | (~(trunc_ln321_reg_935 == 2'd1) & ~(trunc_ln321_reg_935 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_342)) begin
        if ((1'b1 == ap_condition_710)) begin
            buf_2_V_d1 = p_src_mat_data_V_q0;
        end else if ((1'b1 == ap_condition_706)) begin
            buf_2_V_d1 = 8'd0;
        end else begin
            buf_2_V_d1 = 'bx;
        end
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(select_ln879_4_reg_926 == 2'd1) & ~(select_ln879_4_reg_926 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd0)) | (~(trunc_ln321_reg_935 == 2'd1) & ~(trunc_ln321_reg_935 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_reg_939 == 1'd1) & (icmp_ln887_1_reg_931 == 1'd1)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_510_p0 = index_assign_1_reg_438;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_fu_510_p0 = ap_phi_mux_index_assign_1_phi_fu_441_p4;
    end else begin
        grp_fu_510_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_dst_matx_data_V_address0 = sext_ln650_fu_835_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        p_dst_matx_data_V_address0 = sext_ln650_1_fu_803_p1;
    end else begin
        p_dst_matx_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        p_dst_matx_data_V_ce0 = 1'b1;
    end else begin
        p_dst_matx_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_dst_matx_data_V_d0 = GradientValuesX_0_V_1_reg_1007;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        p_dst_matx_data_V_d0 = GradientValuesX_0_V_reg_997;
    end else begin
        p_dst_matx_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter4_reg == 1'd1) & (icmp_ln879_3_reg_960_pp1_iter4_reg == 1'd0)))) begin
        p_dst_matx_data_V_we0 = 1'b1;
    end else begin
        p_dst_matx_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_dst_maty_data_V_address0 = sext_ln650_fu_835_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        p_dst_maty_data_V_address0 = sext_ln650_1_fu_803_p1;
    end else begin
        p_dst_maty_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        p_dst_maty_data_V_ce0 = 1'b1;
    end else begin
        p_dst_maty_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_dst_maty_data_V_d0 = GradientValuesY_0_V_1_reg_1012;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        p_dst_maty_data_V_d0 = GradientValuesY_0_V_reg_1002;
    end else begin
        p_dst_maty_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln887_2_reg_939_pp1_iter4_reg == 1'd1) & (icmp_ln879_3_reg_960_pp1_iter4_reg == 1'd0)))) begin
        p_dst_maty_data_V_we0 = 1'b1;
    end else begin
        p_dst_maty_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_src_mat_data_V_address0 = zext_ln621_1_fu_736_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        p_src_mat_data_V_address0 = zext_ln621_fu_538_p1;
    end else begin
        p_src_mat_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        p_src_mat_data_V_ce0 = 1'b1;
    end else begin
        p_src_mat_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln316_fu_522_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln316_fu_522_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln887_fu_566_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)) & ~((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln326_fu_552_p2 = (zext_ln326_fu_549_p1 + 17'd1);

assign and_ln879_fu_632_p2 = (xor_ln879_fu_626_p2 & icmp_ln879_1_fu_590_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_342 = ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln887_2_reg_939 == 1'd1));
end

always @ (*) begin
    ap_condition_706 = (~(select_ln879_4_reg_926 == 2'd1) & ~(select_ln879_4_reg_926 == 2'd0) & (icmp_ln887_1_reg_931 == 1'd0));
end

always @ (*) begin
    ap_condition_710 = (~(trunc_ln321_reg_935 == 2'd1) & ~(trunc_ln321_reg_935 == 2'd0) & (icmp_ln887_1_reg_931 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter3_write_index_2_reg_449 = 'bx;

assign buf_0_V_addr_1_gep_fu_207_p3 = zext_ln544_1_fu_746_p1;

assign buf_0_V_address0 = zext_ln544_1_reg_953;

assign buf_1_V_addr_1_gep_fu_213_p3 = zext_ln544_1_fu_746_p1;

assign buf_1_V_address0 = zext_ln544_1_reg_953;

assign buf_2_V_addr_gep_fu_219_p3 = zext_ln544_1_fu_746_p1;

assign buf_2_V_address0 = zext_ln544_1_reg_953;

assign col_V_1_fu_721_p2 = (ap_phi_mux_t_V_3_phi_fu_355_p4 + 13'd1);

assign col_V_fu_543_p2 = (t_V_reg_304 + 13'd1);

assign grp_fu_510_p2 = ($signed(grp_fu_510_p0) + $signed(32'd1));

assign icmp_ln316_fu_522_p2 = ((index_assign_reg_293 == img_width) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_590_p2 = ((t_V_1_reg_327 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_596_p2 = ((t_V_1_reg_327 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_756_p2 = ((t_V_3_reg_351 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_815_p2 = ((row_ind_V_fu_809_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_584_p2 = ((t_V_1_reg_327 == 13'd2) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_688_p2 = ((zext_ln887_fu_580_p1 < img_height) ? 1'b1 : 1'b0);

assign icmp_ln887_2_fu_716_p2 = ((zext_ln887_2_fu_712_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_566_p2 = ((zext_ln887_1_fu_562_p1 < add_ln326_reg_907) ? 1'b1 : 1'b0);

assign or_ln879_fu_642_p2 = (icmp_ln879_fu_584_p2 | and_ln879_fu_632_p2);

assign read_index_2_fu_518_p1 = img_width;

assign read_index_3_fu_730_p2 = (32'd1 + read_index_1_fu_104);

assign read_index_fu_527_p2 = (index_assign_reg_293 + 16'd1);

assign row_V_fu_829_p2 = (t_V_2_reg_339 + 13'd1);

assign row_ind_V_fu_809_p2 = (t_V_1_reg_327 + 13'd1);

assign select_ln337_1_fu_610_p3 = ((icmp_ln879_2_fu_596_p2[0:0] === 1'b1) ? 2'd0 : p_01396_0_fu_96);

assign select_ln337_2_fu_618_p3 = ((icmp_ln879_2_fu_596_p2[0:0] === 1'b1) ? 2'd1 : p_01400_0_fu_92);

assign select_ln337_fu_602_p3 = ((icmp_ln879_2_fu_596_p2[0:0] === 1'b1) ? 2'd2 : p_01392_0_fu_100);

assign select_ln401_fu_821_p3 = ((icmp_ln879_4_fu_815_p2[0:0] === 1'b1) ? 13'd0 : row_ind_V_fu_809_p2);

assign select_ln879_1_fu_656_p3 = ((and_ln879_fu_632_p2[0:0] === 1'b1) ? 2'd2 : 2'd1);

assign select_ln879_2_fu_664_p3 = ((or_ln879_fu_642_p2[0:0] === 1'b1) ? select_ln879_1_fu_656_p3 : select_ln337_1_fu_610_p3);

assign select_ln879_3_fu_672_p3 = ((and_ln879_fu_632_p2[0:0] === 1'b1) ? 2'd0 : 2'd2);

assign select_ln879_4_fu_680_p3 = ((or_ln879_fu_642_p2[0:0] === 1'b1) ? select_ln879_3_fu_672_p3 : select_ln337_2_fu_618_p3);

assign select_ln879_fu_648_p3 = ((or_ln879_fu_642_p2[0:0] === 1'b1) ? zext_ln879_fu_638_p1 : select_ln337_fu_602_p3);

assign sext_ln650_1_fu_803_p1 = index_assign_1_reg_438_pp1_iter4_reg;

assign sext_ln650_fu_835_p1 = index_assign_1_reg_438;

assign trunc_ln321_fu_693_p1 = t_V_1_reg_327[1:0];

assign xor_ln879_fu_626_p2 = (icmp_ln879_fu_584_p2 ^ 1'd1);

assign zext_ln326_fu_549_p1 = img_height;

assign zext_ln544_1_fu_746_p1 = t_V_3_reg_351;

assign zext_ln544_fu_533_p1 = t_V_reg_304;

assign zext_ln621_1_fu_736_p1 = read_index_1_fu_104;

assign zext_ln621_fu_538_p1 = index_assign_reg_293;

assign zext_ln879_fu_638_p1 = and_ln879_fu_632_p2;

assign zext_ln887_1_fu_562_p1 = t_V_2_reg_339;

assign zext_ln887_2_fu_712_p1 = ap_phi_mux_t_V_3_phi_fu_355_p4;

assign zext_ln887_fu_580_p1 = t_V_2_reg_339;

always @ (posedge ap_clk) begin
    read_index_2_reg_853[31:16] <= 16'b0000000000000000;
    zext_ln544_reg_867[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln544_1_reg_953[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //xFSobelFilter3x3
